#include <iostream>
#include <string>
#include <limits> // Для std::numeric_limits

// Функция для получения строки с числами от 0 до x
std::string listNums(int x) {
    std::string result; // Строка для хранения результата

    for (int i = 0; i <= x; ++i) { // Цикл от 0 до x
        result += std::to_string(i); // Преобразуем число в строку и добавляем к результату
        if (i < x) {
            result += " "; // Добавляем пробел, если это не последнее число
        }
    }

    return result; // Возвращаем итоговую строку
}

// Функция для получения строки с четными числами от 0 до x
std::string chet(int x) {
    std::string result; // Строка для хранения результата

    for (int i = 0; i <= x; i += 2) { // Цикл от 0 до x, шаг 2 (четные числа)
        result += std::to_string(i); // Преобразуем число в строку и добавляем к результату
        if (i + 2 <= x) {
            result += " "; // Добавляем пробел, если это не последнее четное число
        }
    }

    return result; // Возвращаем итоговую строку
}

// Функция для подсчета количества цифр в числе
int numLen(long x) {
    // Обрабатываем случай 0 отдельно, так как 0 имеет 1 цифру
    if (x == 0) return 1;

    int length = 0; // Счетчик для длины числа
    // Приводим x к положительному значению, если оно отрицательное
    x = x < 0 ? -x : x;

    while (x > 0) { // Цикл до тех пор, пока число не станет 0
        x /= 10; // Делим на 10
        length++; // Увеличиваем счетчик
    }

    return length; // Возвращаем длину
}

// Функция для вывода квадрата из символов '*'
void square(int x) {
    for (int i = 0; i < x; ++i) { // Внешний цикл для высоты
        for (int j = 0; j < x; ++j) { // Внутренний цикл для ширины
            std::cout << "*"; // Выводим символ '*'
        }
        std::cout << std::endl; // Переход на новую строку после каждого ряда
    }
}

// Функция для вывода правого треугольника из символов '*'
void rightTriangle(int x) {
    for (int i = 1; i <= x; ++i) { // Внешний цикл для высоты
        // Выводим пробелы перед символами '*'
        for (int j = 0; j < x - i; ++j) {
            std::cout << " "; // Выводим пробел
        }
        // Выводим символы '*'
        for (int j = 0; j < i; ++j) {
            std::cout << "*"; // Выводим символ '*'
        }
        std::cout << std::endl; // Переход на новую строку после каждого ряда
    }
}

// Функция для ввода целого числа с проверкой
int inputNumber() {
    int x;
    while (true) {
        std::cout << "Введите целое число (0 или больше): ";
        std::cin >> x;

        // Проверяем, является ли ввод корректным
        if (std::cin.fail() || x < 0) {
            std::cin.clear(); // Сбрасываем состояние потока
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очищаем входной поток
            std::cout << "Ошибка: Пожалуйста, введите неотрицательное целое число." << std::endl;
        }
        else {
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очищаем входной поток
            break; // Ввод корректен, выходим из цикла
        }
    }
    return x;
}

int main() {
    setlocale(LC_ALL, "RUSSIAN");

    std::cout << "Задание 1. Числа подряд: ";
    // Получаем корректный ввод для последовательных чисел
    int x = inputNumber();
    // Получаем и выводим все числа от 0 до x
    std::string allNumbers = listNums(x);
    std::cout << "Все числа от 0 до " << x << ": \"" << allNumbers << "\"" << std::endl;

    std::cout << "Задание 2. Числа наоборот: ";
    // Получаем корректный ввод для четных чисел
    int evenX = inputNumber();
    // Получаем и выводим все четные числа от 0 до evenX
    std::string evenNumbers = chet(evenX);
    std::cout << "Четные числа от 0 до " << evenX << ": \"" << evenNumbers << "\"" << std::endl;

    std::cout << "Задание 3. Длина числа: ";
    // Запрашиваем число для подсчета количества цифр
    long num;
    std::cout << "Введите число для подсчета количества цифр: ";
    std::cin >> num;

    // Получаем и выводим количество цифр в числе
    int length = numLen(num);
    std::cout << "Количество цифр в числе " << num << ": " << length << std::endl;

    std::cout << "Задание 4. Квадрад: ";
    // Запрашиваем размер квадрата
    int squareSize;
    std::cout << "Введите размер квадрата (целое число больше 0): ";
    std::cin >> squareSize;

    // Проверяем, что размер квадрата больше 0
    if (squareSize > 0) {
        std::cout << "Квадрат из символов '*':" << std::endl;
        square(squareSize); // Вызываем функцию для вывода квадрата
    }
    else {
        std::cout << "Размер квадрата должен быть больше 0." << std::endl;
    }

    std::cout << "Задание 5. Правый треугольник: ";
    // Запрашиваем размер треугольника
    int triangleSize;
    std::cout << "Введите размер правого треугольника (целое число больше 0): ";
    std::cin >> triangleSize;

    // Проверяем, что размер треугольника больше 0
    if (triangleSize > 0) {
        std::cout << "Правый треугольник из символов '*':" << std::endl;
        rightTriangle(triangleSize); // Вызываем функцию для вывода треугольника
    }
    else {
        std::cout << "Размер треугольника должен быть больше 0." << std::endl;
    }

    return 0;
}
